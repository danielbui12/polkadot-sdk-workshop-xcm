diff --git a/fundamentals/src/pallet_xcm.rs b/fundamentals/src/pallet_xcm.rs
index 2df57c9..ccf515a 100644
--- a/fundamentals/src/pallet_xcm.rs
+++ b/fundamentals/src/pallet_xcm.rs
@@ -153,6 +153,28 @@ impl<T: Config> Pallet<T> {
 		// We don't use this in our naive implementation.
 		_fee_asset_item: u32,
 	) -> DispatchResult {
+		/* The Teleport Instruction is broken up into a local and destination XCM. */
+		/* Create a `local_execute_xcm` which does:
+			- `WithdrawAsset`
+			- `BurnAsset`
+		*/
+
+		/* For the XCM on the destination:
+			- We need to adjust the location of the assets to match the destination
+			- For this, we need to `reanchor` the assets using the `dest` and local `context`
+			- For `context`, you should use the `UniversalLocation`.
+		*/
+
+		/* Then prepare a `xcm_on_dest` which is composed of:
+			- `ReceiveTeleportedAsset` - using `reanchored_assets`
+			- `ClearOrigin`
+			- `DepositAsset` - using the asset filter `Wild(All)`
+		*/
+
+		/* Finally, we just need to:
+			- `do_execute` our `local_execute_xcm`
+			- `do_send` our `xcm_on_dest` to `dest`
+		*/
 		todo!("{:?} {:?} {:?}", dest, beneficiary, assets)
 	}
 
