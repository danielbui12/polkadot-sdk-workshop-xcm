diff --git a/fundamentals/src/pallet_xcm.rs b/fundamentals/src/pallet_xcm.rs
index baec7b7..7169462 100644
--- a/fundamentals/src/pallet_xcm.rs
+++ b/fundamentals/src/pallet_xcm.rs
@@ -132,6 +132,13 @@ impl<T: Config> Pallet<T> {
 	/// Relay an XCM `message` from a given `interior` location in this context to a given `dest`
 	/// location.
 	pub fn do_send(origin: OriginFor<T>, dest: Location, mut message: Xcm<()>) -> DispatchResult {
+		/* TODO:
+			- Use `SendXcmOrigin` to "ensure" that `origin` is valid to send XCM, and assign the resulting location to `origin_location`.
+			- Convert `origin_location` to `interior: Junctions`, else return `InvalidOrigin`.
+			- If `interior` is not equal to `Junctions::Here`, insert into the XCM `DescendOrigin(interior)`.
+			- Use `XcmRouter` to `validate` the `dest` and `message` is valid, and create a `ticket`, else you should return a `RouterError`.
+			- Finally, use the `XcmRouter` to `deliver` the `ticket`, else return `RouterError`.
+		*/
 		todo!("{:?} {:?}", dest, message)
 	}
 
